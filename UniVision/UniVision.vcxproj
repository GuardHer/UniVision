<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{EDB1D453-93B7-4231-859D-3D701343A777}</ProjectGuid>
    <Keyword>QtVS_v304</Keyword>
    <WindowsTargetPlatformVersion Condition="'$(Configuration)|$(Platform)' == 'Debug|x64'">10.0</WindowsTargetPlatformVersion>
    <WindowsTargetPlatformVersion Condition="'$(Configuration)|$(Platform)' == 'Release|x64'">10.0</WindowsTargetPlatformVersion>
    <QtMsBuild Condition="'$(QtMsBuild)'=='' OR !Exists('$(QtMsBuild)\qt.targets')">$(MSBuildProjectDirectory)\QtMsBuild</QtMsBuild>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <PlatformToolset>v143</PlatformToolset>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <PlatformToolset>v143</PlatformToolset>
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Condition="Exists('$(QtMsBuild)\qt_defaults.props')">
    <Import Project="$(QtMsBuild)\qt_defaults.props" />
  </ImportGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x64'" Label="QtSettings">
    <QtInstall>Qt6.6.2</QtInstall>
    <QtModules>core;gui;widgets;opengl;openglwidgets</QtModules>
    <QtBuildConfig>debug</QtBuildConfig>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x64'" Label="QtSettings">
    <QtInstall>Qt6.6.2</QtInstall>
    <QtModules>core;gui;widgets;opengl;openglwidgets</QtModules>
    <QtBuildConfig>release</QtBuildConfig>
  </PropertyGroup>
  <Target Name="QtMsBuildNotFound" BeforeTargets="CustomBuild;ClCompile" Condition="!Exists('$(QtMsBuild)\qt.targets') or !Exists('$(QtMsBuild)\qt.props')">
    <Message Importance="High" Text="QtMsBuild: could not locate qt.targets, qt.props; project may not build correctly." />
  </Target>
  <ImportGroup Label="ExtensionSettings" />
  <ImportGroup Label="Shared" />
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)' == 'Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="$(QtMsBuild)\Qt.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)' == 'Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="$(QtMsBuild)\Qt.props" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x64'">
    <OutDir>$(SolutionDir)bin\</OutDir>
    <TargetName>$(ProjectName)d</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x64'">
    <OutDir>$(SolutionDir)bin\</OutDir>
    <TargetName>$(ProjectName)</TargetName>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <AdditionalIncludeDirectories>$(ProjectDir);$(SolutionDir)3rdparty\spdlog\include\;$(SolutionDir)3rdparty\TensorRT-YOLO\;$(SolutionDir)3rdparty\TensorRT\include\;$(SolutionDir)3rdparty\opencv\include\;$(SolutionDir)3rdparty\CUDA\include\;$(SolutionDir)3rdparty\ElaWidgetTools\install\ElaWidgetTools\include\</AdditionalIncludeDirectories>
      <AdditionalOptions>/utf-8 %(AdditionalOptions)</AdditionalOptions>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
    </ClCompile>
    <Link>
      <AdditionalLibraryDirectories>$(SolutionDir)3rdparty\TensorRT-YOLO\lib\plugin\;$(SolutionDir)3rdparty\TensorRT-YOLO\lib\;$(SolutionDir)3rdparty\TensorRT\lib\;$(SolutionDir)3rdparty\opencv\x64\vc17\lib\;$(SolutionDir)3rdparty\CUDA\lib\x64\;$(SolutionDir)3rdparty\ElaWidgetTools\install\ElaWidgetTools\lib\;$(SolutionDir)bin</AdditionalLibraryDirectories>
      <AdditionalDependencies>ElaWidgetTools.lib;deployd.lib;custom_pluginsd.lib;opencv_world4100.lib;opencv_img_hash4100.lib;nvinfer_10.lib;nvinfer_dispatch_10.lib;nvinfer_lean_10.lib;nvinfer_plugin_10.lib;nvinfer_vc_plugin_10.lib;nvonnxparser_10.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <AdditionalIncludeDirectories>$(ProjectDir);$(SolutionDir)3rdparty\spdlog\include\;$(SolutionDir)3rdparty\TensorRT-YOLO\;$(SolutionDir)3rdparty\TensorRT\include\;$(SolutionDir)3rdparty\opencv\include\;$(SolutionDir)3rdparty\CUDA\include\;$(SolutionDir)3rdparty\ElaWidgetTools\install\ElaWidgetTools\include\</AdditionalIncludeDirectories>
      <AdditionalOptions>/utf-8 %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
    <Link>
      <AdditionalLibraryDirectories>$(SolutionDir)3rdparty\TensorRT-YOLO\lib\plugin\;$(SolutionDir)3rdparty\TensorRT-YOLO\lib\;$(SolutionDir)3rdparty\TensorRT\lib\;$(SolutionDir)3rdparty\opencv\x64\vc17\lib\;$(SolutionDir)3rdparty\CUDA\lib\x64\;$(SolutionDir)3rdparty\ElaWidgetTools\install\ElaWidgetTools\lib\;$(SolutionDir)bin</AdditionalLibraryDirectories>
      <AdditionalDependencies>ElaWidgetToolsd.lib;deployd.lib;custom_pluginsd.lib;opencv_world4100d.lib;opencv_img_hash4100d.lib;nvinfer_10.lib;nvinfer_dispatch_10.lib;nvinfer_lean_10.lib;nvinfer_plugin_10.lib;nvinfer_vc_plugin_10.lib;nvonnxparser_10.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x64'" Label="Configuration">
    <ClCompile>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>false</SDLCheck>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x64'" Label="Configuration">
    <ClCompile>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>false</SDLCheck>
      <ConformanceMode>true</ConformanceMode>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <QtRcc Include="UniVision.qrc" />
    <QtMoc Include="UniVision.h" />
    <ClCompile Include="algorithm\UniAlgorithm.cpp" />
    <ClCompile Include="algorithm\UniYoloOnnxDetect.cpp" />
    <ClCompile Include="algorithm\UniYoloTRTDetect.cpp" />
    <ClCompile Include="config\UniSettings.cpp" />
    <ClCompile Include="core\UniLog.cpp" />
    <ClCompile Include="device\camera\UniCameraBase.cpp" />
    <ClCompile Include="device\camera\UniSimCamera.cpp" />
    <ClCompile Include="extended\UniElaFrame.cpp" />
    <ClCompile Include="extended\UniElaText.cpp" />
    <ClCompile Include="extended\UniElaToggleButton.cpp" />
    <ClCompile Include="extended\UniElaWidget.cpp" />
    <ClCompile Include="extended\UniImageViewFrame.cpp" />
    <ClCompile Include="manager\AppStateManager.cpp" />
    <ClCompile Include="manager\UniAlgorithmManager.cpp" />
    <ClCompile Include="manager\UniCameraManager.cpp" />
    <ClCompile Include="page\UniMasterPage.cpp" />
    <ClCompile Include="test\Test.cpp" />
    <ClCompile Include="test\TestAlgorithm.cpp" />
    <ClCompile Include="UniVision.cpp" />
    <ClCompile Include="main.cpp" />
  </ItemGroup>
  <ItemGroup>
    <QtMoc Include="extended\UniElaToggleButton.h" />
  </ItemGroup>
  <ItemGroup>
    <QtMoc Include="extended\UniElaWidget.h" />
  </ItemGroup>
  <ItemGroup>
    <QtMoc Include="manager\AppStateManager.h" />
  </ItemGroup>
  <ItemGroup>
    <QtMoc Include="page\UniMasterPage.h" />
  </ItemGroup>
  <ItemGroup>
    <QtMoc Include="extended\UniImageViewFrame.h" />
  </ItemGroup>
  <ItemGroup>
    <QtMoc Include="config\UniSettings.h" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="algorithm\UniAlgorithm.h" />
    <ClInclude Include="algorithm\UniYoloOnnxDetect.h" />
    <ClInclude Include="algorithm\UniYoloTRTDetect.h" />
    <ClInclude Include="config\UniAlgorithmConfig.h" />
    <ClInclude Include="config\UniCameraConfig.h" />
    <QtMoc Include="device\camera\UniCameraBase.h" />
    <QtMoc Include="device\camera\UniSimCamera.h" />
    <ClInclude Include="config\UniLogConfig.h" />
    <ClInclude Include="core\UniLog.h" />
    <ClInclude Include="core\UniThreadPool.h" />
    <QtMoc Include="manager\UniAlgorithmManager.h" />
    <QtMoc Include="extended\UniElaText.h" />
    <ClInclude Include="manager\UniCameraManager.h" />
    <ClInclude Include="test\Test.h" />
    <QtMoc Include="extended\UniElaFrame.h" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Condition="Exists('$(QtMsBuild)\qt.targets')">
    <Import Project="$(QtMsBuild)\qt.targets" />
  </ImportGroup>
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>